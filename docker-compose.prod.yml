version: '3.8'

networks:
  alldownloads-network:
    driver: bridge
  proxy:
    external: true

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: alldownloads-db
    environment:
      POSTGRES_DB: alldownloads
      POSTGRES_USER: alldl
      POSTGRES_PASSWORD: alldl
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - alldownloads-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alldl -d alldownloads"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  # Redis Cache
  cache:
    image: redis:7-alpine
    container_name: alldownloads-cache
    networks:
      - alldownloads-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

  # API Service
  api:
    image: nbt4/alldownloads-api:latest
    container_name: alldownloads-api
    environment:
      DB_URL: postgres://alldl:alldl@db:5432/alldownloads?sslmode=disable
      REDIS_URL: redis://cache:6379/0
      PORT: 8080
      AUTH_TOKEN: ${AUTH_TOKEN:-your-secure-token-here}
      BASE_URL: ${BASE_URL:-http://localhost}
      DOMAIN: ${DOMAIN:-localhost}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      RATE_LIMIT_REQUESTS_PER_MINUTE: ${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    networks:
      - alldownloads-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  # Worker Service
  worker:
    image: nbt4/alldownloads-worker:latest
    container_name: alldownloads-worker
    environment:
      DB_URL: postgres://alldl:alldl@db:5432/alldownloads?sslmode=disable
      REDIS_URL: redis://cache:6379/0
      REFRESH_CRON: ${REFRESH_CRON:-@every 6h}
      HTTP_TIMEOUT: ${HTTP_TIMEOUT:-15s}
      MAX_CONCURRENT_FETCHES: ${MAX_CONCURRENT_FETCHES:-6}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - alldownloads-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

  # UI Service (Demo Frontend)
  ui:
    image: nginx:alpine
    container_name: alldownloads-ui
    volumes:
      - ./demo:/usr/share/nginx/html
    ports:
      - "${UI_PORT:-3000}:80"
    networks:
      - alldownloads-network
      - proxy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 32M

volumes:
  db_data: